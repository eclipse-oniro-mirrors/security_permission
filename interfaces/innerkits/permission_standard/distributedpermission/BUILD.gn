# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/permission/permission.gni")
import("//build/ohos.gni")

config("distributed_permission_innerkits_config") {
  visibility = [ ":*" ]

  include_dirs = []

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  defines = [
    "APP_LOG_TAG = \"DistributedPermission\"",
    "LOG_DOMAIN = 0xD001024",
  ]
}

config("distributed_permission_innerkits_public_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "//base/security/permission/frameworks/permission_standard/permissioncommunicationadapter/main/cpp/include",
    "${distributed_permission_services_path}/main/cpp/include/common",
    "${distributed_permission_services_path}/main/cpp/include/record",
    "${distributed_permission_services_path}/main/cpp/src/record",
    "${distributed_permission_frameworks_log_path}/main/cpp/include",
    "${distributed_permission_innerkits_distributed_path}/main/cpp/include",
    "${distributed_permission_innerkits_distributed_path}/main/cpp/include/distributed_permission",
    "${distributed_permission_innerkits_sdk_path}/main/cpp/include/permission_using_remind",
    "${distributed_permission_innerkits_sdk_path}/main/cpp/src/permission_using_remind",
    "${distributed_permission_services_path}/main/cpp/include/distributed",
    "${distributed_permission_database_path}/main/cpp/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//third_party/json/single_include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//third_party/json/include",
    "//third_party/zlib",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk/main/cpp/include",
  ]
}

ohos_shared_library("distributed_permission_innerkits") {
  sources = [
    "${distributed_permission_innerkits_distributed_path}/main/cpp/src/distributed_permission_death_recipient.cpp",
    "${distributed_permission_innerkits_distributed_path}/main/cpp/src/distributed_permission_kit.cpp",
    "${distributed_permission_innerkits_distributed_path}/main/cpp/src/distributed_permission_manager_client.cpp",
    "${distributed_permission_innerkits_distributed_path}/main/cpp/src/distributed_permission_proxy.cpp",
    "${distributed_permission_services_path}/main/cpp/src/common/constant.cpp",
    "${distributed_permission_services_path}/main/cpp/src/record/bundle_permission_used_record.cpp",
    "${distributed_permission_services_path}/main/cpp/src/record/permission_used_record.cpp",
    "${distributed_permission_services_path}/main/cpp/src/record/query_permission_used_request.cpp",
    "${distributed_permission_services_path}/main/cpp/src/record/query_permission_used_result.cpp",
  ]

  configs = [ ":distributed_permission_innerkits_config" ]

  public_configs = [ ":distributed_permission_innerkits_public_config" ]

  deps = [
    "${distributed_permission_database_path}:permission_standard_infrastructure_database",
    "${distributed_permission_frameworks_log_path}:permission_standard_infrastructure_cxx",
    "${permission_path}/frameworks/permission_standard/permissioncommunicationadapter:permission_standard_communication_adapter_cxx",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk:libpermissionsdk_standard",
    "//utils/native/base:utils",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]

  external_deps = [
    "aafwk_standard:ability_manager",
    "aafwk_standard:want",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_standard:samgr_proxy",
    "startup_l2:syspara",
  ]

  subsystem_name = "security"
  part_name = "permission_standard"
}
